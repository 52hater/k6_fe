//맵으로 안하면?
//arr2 만들기 arr을 arr2로
//배열은 인덱스로 가져올수도, 배열을 그대로 가져올 수도 있다
//맵함수는 반복문 오브라고 생각하면 됨 arr배열에 arr.map 이렇게 메소드가 있다고 배열명.맵 맵함수, 함수들은 인수를 뭘 써야하는지가 중요 > 콜백함수
//인수로 들어가는함수 : 콜백함수 arr.map(() => {}) //중괄호에서 엔터쳐서 쓰지//중괄호사이에 명령문쓰려고 공간확보

let arr = ['😊', 1, '😂😂', 2, '😁😁😁', 3, ]
console.log("arr = ", arr)

let arr1 = [0,0,0,0,0,0,] // 여섯개요소를 arr과 똑같은 내용으로 바꿔치기 > 0을 arr의 0번째 있는걸로 가지고와서 할당해서 바꾼다 > 요소를 가지고와서 바꿔치기 
//여섯개지만 인덱스별 똑같은형태로 바꿔치기//반복문돌면서 한개씩한개씩 바꿔주는
for(let i in arr) {
    arr1[i] = arr[i];
}
console.log("반복문 인덱스로 arr1 = ", arr1)

let arr2 = []; //let arr2; 는 언디파인드, 지금 이거는 []로 나옴 > 빈 배열 //자바처럼 뉴 써서 배열객체 만들수도 있다
console.log("arr2 = ", arr2);

//반복문으로 만들어도 됨
// for (let item of arr) {
//     arr2.puch(item); //파이썬에서 append가 js의 push // 이동시키는게 아니라 복제되는거 // 인덱스별로 같은걸 만들어서 넣는거
// }
//for in으로도 됨
for(let i in arr) {
    arr2.push(arr[i]);//무조건 갖다 집어넣는것
}
//요렇게
//푸쉬는 똑같은데 표현식이 다른 것, 요소그대로 넣을거냐(of), 인덱스를 넣을거냐(in)/of가 편해보이는데 in을 써야되는 경우도 있다

console.log("반복문으로 arr2 = ", arr2)

//배열map함수
//map이라는 메소드
//배열에 갖다넣을땐 어떤 위치에 넣어야되는지 모르잖아
//

//콜백함수를 줄여쓰는 방법들
arr2 = arr.map((v) => { //리턴되는s를 받아내는 변수가 arr2, 리턴되는만큼 arr2가 다시 만들어짐
    let s = s + '❤' ;
    console.log(v, ',', s);

    return s;
})

console.log("map arr2 = ", arr2);

arr2 = arr.map(v => v + '❤'); //리턴만 있으면 중괄호 생략가능 > 리턴 키워드없애야함//배열에 파라미터 v한개 > ()생략도 가능
console.log("map arr2 = ", arr2);

arr2 = arr.map((v, i) => v + '❤' + i); //인덱스도 가져와 : 파라미터가 두개이상 > 반드시 괄호
console.log("map arr2 = ", arr2); // 인덱스 번호도 나옴

//filter 말그대로 필터링
let arr21 = [];
for(let item of arr){//배열안에있는걸 그대로 한개씩 가지고와서 골라낼건데 아이템이 숫자인지 아닌지 구분해야지 > 
    if(isNaN(item)) arr21.push(item);//반복문을 쓰는 이 구문을 필터라는 함수로 해결하겠다 >  isNaN, !isNaN 찾아봐
}
console.log("Filter arr21 = ", arr21);

arr21 = arr.filter((v) => {//인수 한개들어오면 요소
    if(isNaN(v))console.log(v);//이렇게 필터걺

    return isNaN(v) //리턴에 조건식을 걸어서이렇게하면 isNaN 조건이 맞아야 리턴 > 받는애 : arr21 > 제일앞에// !isNaN 이면 숫자만 나오겠지
    //필터쓰면 조건에 맞는것만 생김
});

//필터도 줄일 수 있음

arr21 = arr.filter((v) => isNaN(v)); //이렇게

//맵과 필터 차이 이해// 화살표 함수안에 명령문 한개만 > 리턴문만있는 함수지
//맵()과 필터()는 배열에서만 쓸 수 있다, 오브젝트에서는 못쓴다 그러나 오브젝트에서도 써야한다 그러면 어떻게 써야할까
//오브젝트를 배열로 만들면 맵과 필터를 쓸 수 있다 > 09.js
let obj = {'🍓' : 1, '🍌🍌' : 2, '🍉🍉🍉' : 3,};//맨뒤에 의미없고 오류없는 쉼표 : 테일링 쉼표 tailing 쉼표 사용가능/기호주의//키/밸류(스마일/1)
console.log("오브젝트 : ", obj);
console.log("오브젝트 요소 접근 : ", obj['🍓']);
//오브젝트는 키와 값쌍으로, 키는 키대로 값은 값대로 따로 뽑을 수도 있음
//파이썬에서는 어레이 두개 개수같으면 zip으로 찝어내서 씀
